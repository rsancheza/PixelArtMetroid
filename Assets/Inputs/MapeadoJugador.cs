//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Inputs/MapeadoJugador.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @MapeadoJugador : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @MapeadoJugador()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""MapeadoJugador"",
    ""maps"": [
        {
            ""name"": ""Jugador"",
            ""id"": ""b4976611-1fb5-4b9f-be6f-566e53a908c5"",
            ""actions"": [
                {
                    ""name"": ""Caminar"",
                    ""type"": ""Value"",
                    ""id"": ""71ac9307-d3ba-4773-be5f-e7d36371dc40"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Saltar"",
                    ""type"": ""Button"",
                    ""id"": ""bfaec0a3-fcf4-4140-bdc0-6c8641c8e3b1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Disparar"",
                    ""type"": ""Button"",
                    ""id"": ""4432b1ea-acf2-4990-8624-1a83e486a057"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Agachar"",
                    ""type"": ""Button"",
                    ""id"": ""4f6d2571-80cc-4021-b459-d0ad640ec0af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Levantar"",
                    ""type"": ""Button"",
                    ""id"": ""00adf669-08c8-40a0-970a-65615f913bb7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Mando"",
                    ""id"": ""41c5d660-0fce-4982-8aeb-2c573462f6a5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Caminar"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""cb453547-0f86-4c6e-b3e2-cf57ef83e8b7"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""JugadorEnLaCueva"",
                    ""action"": ""Caminar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""120efdcd-d931-4733-8bd4-5e046b28cf9d"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""JugadorEnLaCueva"",
                    ""action"": ""Caminar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Teclado"",
                    ""id"": ""15216081-7910-403a-82c7-e2b42ca59850"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Caminar"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9d4645a2-cd6c-4f7b-93f8-70050bdef509"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""JugadorEnLaCueva"",
                    ""action"": ""Caminar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9fe3e56e-52b2-4475-9706-da209376216f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""JugadorEnLaCueva"",
                    ""action"": ""Caminar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""52478ba8-0ce5-4f18-8bd9-5ab153a39d26"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""JugadorEnLaCueva"",
                    ""action"": ""Saltar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6229de6f-b3df-4ff5-b795-1dc53eaa5096"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""JugadorEnLaCueva"",
                    ""action"": ""Saltar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ad14fbb-5771-4f63-8bdf-94727d9d759c"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""JugadorEnLaCueva"",
                    ""action"": ""Disparar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83856ca1-9665-45a2-87f0-12159cdd8e45"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""JugadorEnLaCueva"",
                    ""action"": ""Disparar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bcb818c0-55d4-4220-80f9-3384938ff37d"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Agachar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b861e27e-0a1a-4887-ae45-639204ba63d3"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Agachar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4bc59fe9-563d-4bb0-9f8a-21271f94216c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Agachar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a7b3a79-cee0-4471-9283-e20e43bc5760"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Levantar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1bef2379-df5c-4c65-9696-44dfd5fe9891"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Levantar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""JugadorEnLaCueva"",
            ""bindingGroup"": ""JugadorEnLaCueva"",
            ""devices"": []
        }
    ]
}");
        // Jugador
        m_Jugador = asset.FindActionMap("Jugador", throwIfNotFound: true);
        m_Jugador_Caminar = m_Jugador.FindAction("Caminar", throwIfNotFound: true);
        m_Jugador_Saltar = m_Jugador.FindAction("Saltar", throwIfNotFound: true);
        m_Jugador_Disparar = m_Jugador.FindAction("Disparar", throwIfNotFound: true);
        m_Jugador_Agachar = m_Jugador.FindAction("Agachar", throwIfNotFound: true);
        m_Jugador_Levantar = m_Jugador.FindAction("Levantar", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Jugador
    private readonly InputActionMap m_Jugador;
    private IJugadorActions m_JugadorActionsCallbackInterface;
    private readonly InputAction m_Jugador_Caminar;
    private readonly InputAction m_Jugador_Saltar;
    private readonly InputAction m_Jugador_Disparar;
    private readonly InputAction m_Jugador_Agachar;
    private readonly InputAction m_Jugador_Levantar;
    public struct JugadorActions
    {
        private @MapeadoJugador m_Wrapper;
        public JugadorActions(@MapeadoJugador wrapper) { m_Wrapper = wrapper; }
        public InputAction @Caminar => m_Wrapper.m_Jugador_Caminar;
        public InputAction @Saltar => m_Wrapper.m_Jugador_Saltar;
        public InputAction @Disparar => m_Wrapper.m_Jugador_Disparar;
        public InputAction @Agachar => m_Wrapper.m_Jugador_Agachar;
        public InputAction @Levantar => m_Wrapper.m_Jugador_Levantar;
        public InputActionMap Get() { return m_Wrapper.m_Jugador; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(JugadorActions set) { return set.Get(); }
        public void SetCallbacks(IJugadorActions instance)
        {
            if (m_Wrapper.m_JugadorActionsCallbackInterface != null)
            {
                @Caminar.started -= m_Wrapper.m_JugadorActionsCallbackInterface.OnCaminar;
                @Caminar.performed -= m_Wrapper.m_JugadorActionsCallbackInterface.OnCaminar;
                @Caminar.canceled -= m_Wrapper.m_JugadorActionsCallbackInterface.OnCaminar;
                @Saltar.started -= m_Wrapper.m_JugadorActionsCallbackInterface.OnSaltar;
                @Saltar.performed -= m_Wrapper.m_JugadorActionsCallbackInterface.OnSaltar;
                @Saltar.canceled -= m_Wrapper.m_JugadorActionsCallbackInterface.OnSaltar;
                @Disparar.started -= m_Wrapper.m_JugadorActionsCallbackInterface.OnDisparar;
                @Disparar.performed -= m_Wrapper.m_JugadorActionsCallbackInterface.OnDisparar;
                @Disparar.canceled -= m_Wrapper.m_JugadorActionsCallbackInterface.OnDisparar;
                @Agachar.started -= m_Wrapper.m_JugadorActionsCallbackInterface.OnAgachar;
                @Agachar.performed -= m_Wrapper.m_JugadorActionsCallbackInterface.OnAgachar;
                @Agachar.canceled -= m_Wrapper.m_JugadorActionsCallbackInterface.OnAgachar;
                @Levantar.started -= m_Wrapper.m_JugadorActionsCallbackInterface.OnLevantar;
                @Levantar.performed -= m_Wrapper.m_JugadorActionsCallbackInterface.OnLevantar;
                @Levantar.canceled -= m_Wrapper.m_JugadorActionsCallbackInterface.OnLevantar;
            }
            m_Wrapper.m_JugadorActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Caminar.started += instance.OnCaminar;
                @Caminar.performed += instance.OnCaminar;
                @Caminar.canceled += instance.OnCaminar;
                @Saltar.started += instance.OnSaltar;
                @Saltar.performed += instance.OnSaltar;
                @Saltar.canceled += instance.OnSaltar;
                @Disparar.started += instance.OnDisparar;
                @Disparar.performed += instance.OnDisparar;
                @Disparar.canceled += instance.OnDisparar;
                @Agachar.started += instance.OnAgachar;
                @Agachar.performed += instance.OnAgachar;
                @Agachar.canceled += instance.OnAgachar;
                @Levantar.started += instance.OnLevantar;
                @Levantar.performed += instance.OnLevantar;
                @Levantar.canceled += instance.OnLevantar;
            }
        }
    }
    public JugadorActions @Jugador => new JugadorActions(this);
    private int m_JugadorEnLaCuevaSchemeIndex = -1;
    public InputControlScheme JugadorEnLaCuevaScheme
    {
        get
        {
            if (m_JugadorEnLaCuevaSchemeIndex == -1) m_JugadorEnLaCuevaSchemeIndex = asset.FindControlSchemeIndex("JugadorEnLaCueva");
            return asset.controlSchemes[m_JugadorEnLaCuevaSchemeIndex];
        }
    }
    public interface IJugadorActions
    {
        void OnCaminar(InputAction.CallbackContext context);
        void OnSaltar(InputAction.CallbackContext context);
        void OnDisparar(InputAction.CallbackContext context);
        void OnAgachar(InputAction.CallbackContext context);
        void OnLevantar(InputAction.CallbackContext context);
    }
}
